<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:int-jms="http://www.springframework.org/schema/integration/jms"
       xmlns:int-xml="http://www.springframework.org/schema/integration/xml"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
  http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
  http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
  http://www.springframework.org/schema/integration/jms http://www.springframework.org/schema/integration/jms/spring-integration-jms.xsd
  http://www.springframework.org/schema/integration/xml
  http://www.springframework.org/schema/integration/xml/spring-integration-xml.xsd">

    <bean id="transactionManager" class="org.springframework.integration.transaction.PseudoTransactionManager" />

    <bean id="actionInstructionMessageListenerContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="connectionFactory" />
        <property name="destinationName" value="Action.Field" />
        <property name="maxConcurrentConsumers" value="${container.threads}" />
        <property name="receiveTimeout" value="${container.receiveTimeout}" />
        <property name="recoveryInterval" value="${container.recoveryInterval}" />
        <property name="autoStartup" value="true" />
        <property name="sessionTransacted" value="true" />
        <property name="transactionManager" ref="transactionManager" />
    </bean>

    <!-- need an input channel defined for MQ adapter to input to -->
    <int:channel id="actionInstructionXml" />
    <!-- the MQ channel adapter reads from the Action.Field Queue (see the container above) and inputs to actionInstructionXml -->
    <int-jms:message-driven-channel-adapter
            id="jmsIn" container="actionInstructionMessageListenerContainer" channel="actionInstructionXml"/>

    <!-- anything sent to this channel is put on the queue Action.InvalidActionInstructions -->
    <int:channel id="actionInstructionXmlInvalid" />
    <bean id="invalidActionInstructionQueue" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg value="Action.InvalidActionInstructions"/>
    </bean>
    <int-jms:outbound-channel-adapter id="invalidActionInstructionJmsOut" destination="invalidActionInstructionQueue" channel="actionInstructionXmlInvalid"/>

    <!-- First the SI message provided by the channel adapter is validated against the inbound schema -->
    <!-- Option to be used in Debug/Test: throw-exception-on-rejection="true" -->
    <int-xml:validating-filter id="actionInstructionValidator" input-channel="actionInstructionXml"
                               output-channel="actionInstructionXmlValid" schema-location="classpath:xsd/actionInstruction.xsd" discard-channel="actionInstructionXmlInvalid"/>

    <!-- Secondly the now validated xml is transformed into the jaxb generated object model -->
    <bean id="actionInstructionUnmarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="contextPath" value="uk.gov.ons.ctp.response.action.message.instruction" />
    </bean>

    <bean id="jmsBackedQueue" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg value="Action.FieldJmsBackup"/>
    </bean>
    <!-- To mark the channel as "pollable", set the "message-driven" property to "false" -->
    <int-jms:channel id="actionInstructionTransformed" queue-name="Action.FieldJmsBackup" message-driven="false" />

    <int-xml:unmarshalling-transformer input-channel="actionInstructionXmlValid" output-channel="actionInstructionTransformed" unmarshaller="actionInstructionUnmarshaller" />
    <!-- The transformer uses this unmarshaller to do the heavy (un)lifting -->

    <!-- Start of the poller section -->
    <int:channel id="drsGatewayPollerError" />
    <bean id="drsGatewayPollerErrorQueue" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg value="Action.DrsGatewayPollerErrors"/>
    </bean>
    <int-jms:outbound-channel-adapter id="drsGatewayPollerErrorJmsOut" destination="drsGatewayPollerErrorQueue" channel="drsGatewayPollerError"/>

    <bean id="customPeriodicTrigger" class="uk.gov.ons.ctp.response.kirona.drs.utility.CustomPeriodicTrigger" />

    <bean id="customTaskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="${container.threads}" />
    </bean>

    <int:poller id="customPoller" default="true" trigger="customPeriodicTrigger" task-executor="customTaskExecutor" max-messages-per-poll="${poller.maxMessagesPerPoll}" error-channel="drsGatewayPollerError">
        <int:transactional propagation="REQUIRED" read-only="true" transaction-manager="transactionManager"/>
    </int:poller>
    <!-- End of the poller section -->
</beans>
